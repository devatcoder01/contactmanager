[{"C:\\Users\\Javed Iqbal\\contactmanager\\src\\index.js":"1","C:\\Users\\Javed Iqbal\\contactmanager\\src\\App.js":"2","C:\\Users\\Javed Iqbal\\contactmanager\\src\\reportWebVitals.js":"3","C:\\Users\\Javed Iqbal\\contactmanager\\src\\Context.js":"4","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\layout\\Header.js":"5","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\contacts\\Contacts.js":"6","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\contacts\\Contact.js":"7","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\contacts\\addContact.js":"8","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\layout\\textInputGroup.jsx":"9","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\pages\\About.jsx":"10","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\pages\\NotFound.jsx":"11","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\test\\Test.js":"12","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\contacts\\updateContact.js":"13"},{"size":479,"mtime":1611249604480,"results":"14","hashOfConfig":"15"},{"size":1957,"mtime":1632454975122,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":1300,"mtime":1632453512554,"results":"18","hashOfConfig":"15"},{"size":1396,"mtime":1632388137255,"results":"19","hashOfConfig":"15"},{"size":1645,"mtime":1632391866805,"results":"20","hashOfConfig":"15"},{"size":2882,"mtime":1632418208990,"results":"21","hashOfConfig":"15"},{"size":3165,"mtime":1632418745179,"results":"22","hashOfConfig":"15"},{"size":1037,"mtime":1632388527675,"results":"23","hashOfConfig":"15"},{"size":293,"mtime":1632389631284,"results":"24","hashOfConfig":"15"},{"size":362,"mtime":1632391390093,"results":"25","hashOfConfig":"15"},{"size":925,"mtime":1632395509105,"results":"26","hashOfConfig":"15"},{"size":3860,"mtime":1632454372682,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1msgqpa",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"30"},"C:\\Users\\Javed Iqbal\\contactmanager\\src\\index.js",[],["61","62"],"C:\\Users\\Javed Iqbal\\contactmanager\\src\\App.js",[],"C:\\Users\\Javed Iqbal\\contactmanager\\src\\reportWebVitals.js",[],"C:\\Users\\Javed Iqbal\\contactmanager\\src\\Context.js",[],"C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\layout\\Header.js",[],"C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\contacts\\Contacts.js",[],"C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\contacts\\Contact.js",["63"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Consumer } from '../../Context';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { right } from '@popperjs/core';\r\n\r\nclass Contact extends Component {\r\n  //   static propTypes  =  {\r\n  //         name: PropTypes.string.isRequired,\r\n  //         email: PropTypes.string.isRequired,\r\n  //         phone: PropTypes.string.isRequired,\r\n  //     }\r\n  // constructor() {\r\n  //     super();\r\n  //     this.state = {};\r\n  //     this.onShowClick = this.onShowClick.bind(this);\r\n  // }\r\n  state = { showContactInfo: false };\r\n  onShowClick = (e) => {\r\n    this.setState({ showContactInfo: !this.state.showContactInfo });\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    // this.props.deleteClickHandler();\r\n    const action = { type: 'DELETE_CONTACT', payload: id };\r\n    try {\r\n      await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n      dispatch(action);\r\n    } catch (e) {\r\n      dispatch(action);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    const { showContactInfo } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                {name}\r\n                <i\r\n                  onClick={this.onShowClick}\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: 'pointer' }}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  style={{ cursor: 'pointer', float: 'right', color: 'red' }}\r\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\r\n                ></i>\r\n\r\n                <Link to={`contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      float: 'right',\r\n                      cursor: 'pointer',\r\n                      marginRight: '1rem',\r\n                      color: 'orange',\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n\r\n              {showContactInfo ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email:{email}</li>\r\n                  <li className=\"list-group-item\">Phone:{phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\nContact.defaultProps = { name: 'loota', email: 'Mota', phone: 'Null' };\r\nContact.propsTypes = {\r\n  contact: PropTypes.object.isRequired,\r\n  // deleteClickHandler: PropTypes.func.isrequired\r\n  // email: PropTypes.string.isRequired,\r\n  // phone: PropTypes.string.isRequired,\r\n};\r\nexport default Contact;\r\n","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\contacts\\addContact.js",["64","65"],"import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TextInputGroup from '../layout/textInputGroup';\r\nimport axios from 'axios';\r\n\r\nclass AddContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    const newContact = {\r\n      name: name,\r\n      email: email,\r\n      phone: phone,\r\n    };\r\n\r\n    // const action = { type: 'ADD_CONTACT', payload: res.data };\r\n    const res = await axios.post(\r\n      'https://jsonplaceholder.typicode.com/users',\r\n      newContact\r\n    );\r\n\r\n    dispatch({ type: 'ADD_CONTACT', payload: res.data });\r\n\r\n    this.setState({ name: '', email: '', phone: '' });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  // onEmailChange = (e) => this.setState({email: e.target.value});\r\n  // onPhoneChange = (e) => this.setState({phone: e.target.value});\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  ></TextInputGroup>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  ></TextInputGroup>\r\n\r\n                  <TextInputGroup\r\n                    label=\"phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  ></TextInputGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\layout\\textInputGroup.jsx",["66"],"import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextInputGroup = ({\r\n  label,\r\n  name,\r\n  value,\r\n  placeholder,\r\n  type,\r\n  onChange,\r\n  error,\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        name={name}\r\n        type={type}\r\n        placeholder={placeholder}\r\n        className={classnames('form-control form-control-lg', {\r\n          'is-invalid': error,\r\n        })}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feeback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: 'text',\r\n};\r\nexport default TextInputGroup;\r\n","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\pages\\About.jsx",["67","68"],"import React, { Component } from 'react';\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage contacts</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\pages\\NotFound.jsx",["69","70"],"import React, { Component } from 'react';\r\nexport default (props) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        {' '}\r\n        <span className=\"text-danger\">404</span> Page Not found\r\n      </h1>\r\n      <p className=\"lead\">Sorrry this page does not exist</p>\r\n      <p className=\"text-secondary\">version 1.0.0</p>\r\n    </div>\r\n  );\r\n};\r\n","C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\test\\Test.js",[],"C:\\Users\\Javed Iqbal\\contactmanager\\src\\components\\contacts\\updateContact.js",["71","72","73"],"import React, { Component } from 'react';\r\nimport { Consumer } from '../../Context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport TextInputGroup from '../layout/textInputGroup';\r\nimport axios from 'axios';\r\nimport Contact from './Contact';\r\n\r\nclass UpdateContact extends Component {\r\n  state = {\r\n    name: '',\r\n    email: '',\r\n    phone: '',\r\n    errors: {},\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n\r\n    const contact = res.data;\r\n\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    if (name === '') {\r\n      this.setState({ errors: { name: 'Name is required' } });\r\n      return;\r\n    }\r\n    if (email === '') {\r\n      this.setState({ errors: { email: 'Email is required' } });\r\n      return;\r\n    }\r\n    if (phone === '') {\r\n      this.setState({ errors: { phone: 'Phone is required' } });\r\n      return;\r\n    }\r\n\r\n    // const action = { type: 'ADD_CONTACT', payload: res.data };\r\n\r\n    const updateContact = { name, email, phone };\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    try {\r\n      const res = await axios.put(\r\n        `https://jsonplaceholder.typicode.com/users/${id}`,\r\n        updateContact\r\n      );\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n    } catch (e) {\r\n      dispatch({ type: 'UPDATE_CONTACT', payload: updateContact });\r\n    }\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updateContact\r\n    );\r\n\r\n    dispatch({ type: 'UPDATE_CONTACT', payload: res.data });\r\n\r\n    this.setState({ name: '', email: '', phone: '' });\r\n\r\n    this.props.history.push('/');\r\n  };\r\n\r\n  // onEmailChange = (e) => this.setState({email: e.target.value});\r\n  // onPhoneChange = (e) => this.setState({phone: e.target.value});\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Update Contact</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  ></TextInputGroup>\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter email\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    type=\"email\"\r\n                    error={errors.email}\r\n                  ></TextInputGroup>\r\n\r\n                  <TextInputGroup\r\n                    label=\"phone\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter phone number\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  ></TextInputGroup>\r\n\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Update Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateContact;\r\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":6,"column":10,"nodeType":"80","messageId":"81","endLine":6,"endColumn":15},{"ruleId":"78","severity":1,"message":"82","line":3,"column":16,"nodeType":"80","messageId":"81","endLine":3,"endColumn":22},{"ruleId":"78","severity":1,"message":"83","line":19,"column":33,"nodeType":"80","messageId":"81","endLine":19,"endColumn":39},{"ruleId":"78","severity":1,"message":"84","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"78","severity":1,"message":"84","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":2,"column":1,"nodeType":"87","endLine":10,"endColumn":3},{"ruleId":"78","severity":1,"message":"84","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"85","severity":1,"message":"86","line":2,"column":1,"nodeType":"87","endLine":13,"endColumn":3},{"ruleId":"78","severity":1,"message":"82","line":3,"column":16,"nodeType":"80","messageId":"81","endLine":3,"endColumn":22},{"ruleId":"78","severity":1,"message":"88","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":15},{"ruleId":"78","severity":1,"message":"83","line":35,"column":33,"nodeType":"80","messageId":"81","endLine":35,"endColumn":39},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'right' is defined but never used.","Identifier","unusedVar","'uuidv4' is defined but never used.","'errors' is assigned a value but never used.","'Component' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'Contact' is defined but never used.","no-global-assign","no-unsafe-negation"]